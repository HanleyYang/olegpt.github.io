<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://olegpt.top</id>
    <title>Oleg的博客</title>
    <updated>2021-06-29T09:18:35.098Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://olegpt.top"/>
    <link rel="self" href="https://olegpt.top/atom.xml"/>
    <logo>https://olegpt.top/images/avatar.png</logo>
    <icon>https://olegpt.top/favicon.ico</icon>
    <rights>All rights reserved 2021, Oleg的博客</rights>
    <entry>
        <title type="html"><![CDATA[Mac OS延迟通知脚本]]></title>
        <id>https://olegpt.top/post/mac-os-yan-chi-tong-zhi-jiao-ben/</id>
        <link href="https://olegpt.top/post/mac-os-yan-chi-tong-zhi-jiao-ben/">
        </link>
        <updated>2021-06-29T09:08:33.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[HDFS学习笔记之：（2）RPC服务端实现]]></title>
        <id>https://olegpt.top/post/hdfs-xue-xi-bi-ji-zhi-2rpc-fu-wu-duan-shi-xian/</id>
        <link href="https://olegpt.top/post/hdfs-xue-xi-bi-ji-zhi-2rpc-fu-wu-duan-shi-xian/">
        </link>
        <updated>2021-05-13T08:54:52.000Z</updated>
        <summary type="html"><![CDATA[<p>上一篇介绍了RPC客户端的核心实现，这一篇继续来看服务端的实现。服务端的NetServer由Server类及其子类实现，而ServerStub则由RpcInvoker接口及其实现类来实现。</p>
<pre><code class="language-plantuml">@startuml
    'skinparam linetype ortho
    abstract &quot;Server&quot; as ServerTop #Yellow
    class RPC
    abstract Server {

    }
    ServerTop &lt;|-d- Server
    RPC +-- Server
    interface RpcInvoker #Yellow {
        call(Server server, String protocol, Writable rpcRequest, long receiveTime)
    }
    RPC +-- RpcInvoker
    class WritableRpcEngine
    class ProtobufRpcEngine


    class &quot;Server&quot; as Server1 
    class &quot;Server&quot; as Server2

    WritableRpcEngine +-d- Server1
    ProtobufRpcEngine +-d- Server2

    Server1 .u.|&gt; Server
    Server2 .u.|&gt; Server
    Server1 +-d- WritableRpcInvoker
    Server2 +-d- ProtobufRpcInvoker
    WritableRpcInvoker .u.|&gt; RpcInvoker
    ProtobufRpcInvoker .u|&gt; RpcInvoker

    class WritableRpcInvoker
    class ProtobufRpcInvoker
@enduml
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<p>上一篇介绍了RPC客户端的核心实现，这一篇继续来看服务端的实现。服务端的NetServer由Server类及其子类实现，而ServerStub则由RpcInvoker接口及其实现类来实现。</p>
<pre><code class="language-plantuml">@startuml
    'skinparam linetype ortho
    abstract &quot;Server&quot; as ServerTop #Yellow
    class RPC
    abstract Server {

    }
    ServerTop &lt;|-d- Server
    RPC +-- Server
    interface RpcInvoker #Yellow {
        call(Server server, String protocol, Writable rpcRequest, long receiveTime)
    }
    RPC +-- RpcInvoker
    class WritableRpcEngine
    class ProtobufRpcEngine


    class &quot;Server&quot; as Server1 
    class &quot;Server&quot; as Server2

    WritableRpcEngine +-d- Server1
    ProtobufRpcEngine +-d- Server2

    Server1 .u.|&gt; Server
    Server2 .u.|&gt; Server
    Server1 +-d- WritableRpcInvoker
    Server2 +-d- ProtobufRpcInvoker
    WritableRpcInvoker .u.|&gt; RpcInvoker
    ProtobufRpcInvoker .u|&gt; RpcInvoker

    class WritableRpcInvoker
    class ProtobufRpcInvoker
@enduml
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HDFS学习笔记之：（1）RPC客户端实现]]></title>
        <id>https://olegpt.top/post/hdfs-rpc-shi-xian/</id>
        <link href="https://olegpt.top/post/hdfs-rpc-shi-xian/">
        </link>
        <updated>2021-05-13T06:33:36.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda表达式与匿名内部类]]></title>
        <id>https://olegpt.top/post/l/</id>
        <link href="https://olegpt.top/post/l/">
        </link>
        <updated>2021-03-09T11:44:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spark 任务失败会影响accumulator的准确性吗？]]></title>
        <id>https://olegpt.top/post/spark-accumulator-zhen-de-zhun-que-ma/</id>
        <link href="https://olegpt.top/post/spark-accumulator-zhen-de-zhun-que-ma/">
        </link>
        <updated>2021-03-09T01:40:18.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spark源码笔记之-RPC框架]]></title>
        <id>https://olegpt.top/post/spark-rpc-kuang-jia-de-shi-xian/</id>
        <link href="https://olegpt.top/post/spark-rpc-kuang-jia-de-shi-xian/">
        </link>
        <updated>2020-10-29T12:41:18.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[70. Climbing Stairs]]></title>
        <id>https://olegpt.top/post/70-climbing-stairs/</id>
        <link href="https://olegpt.top/post/70-climbing-stairs/">
        </link>
        <updated>2020-08-04T12:37:24.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[最短路径问题的解法]]></title>
        <id>https://olegpt.top/post/zui-duan-lu-jing-wen-ti-de-jie-fa/</id>
        <link href="https://olegpt.top/post/zui-duan-lu-jing-wen-ti-de-jie-fa/">
        </link>
        <updated>2020-07-15T12:36:20.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[kudu的compaction机制]]></title>
        <id>https://olegpt.top/post/kudu-de-compaction-ji-zhi/</id>
        <link href="https://olegpt.top/post/kudu-de-compaction-ji-zhi/">
        </link>
        <updated>2020-07-07T12:43:10.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[739. Daily Temperatures]]></title>
        <id>https://olegpt.top/post/739-daily-temperatures/</id>
        <link href="https://olegpt.top/post/739-daily-temperatures/">
        </link>
        <updated>2020-07-01T12:40:45.000Z</updated>
    </entry>
</feed>